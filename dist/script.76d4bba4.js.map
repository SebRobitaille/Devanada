{"version":3,"sources":["../script.js"],"names":["sections","document","querySelectorAll","sectBtns","sectBtn","allSections","querySelector","ctaBtn","contactSec","getElementById","contactBtn","PageTransitions","i","length","addEventListener","currentBtn","className","replace","e","id","target","dataset","forEach","btn","classList","remove","section","element","add","TypeWriter","txtElement","words","wait","txt","wordIndex","parseInt","type","isDeleting","prototype","currentWord","fullTxt","substring","innerHTML","typeSpeed","setTimeout","initializeText","JSON","parse","getAttribute","servicesPageObserverOption","rootMargin","threshold","servicesPagePhone","moveServicePagePhone","servicesPagePhoneObserver","IntersectionObserver","entries","entry","isIntersecting","windowHeight","window","innerHeight","boundingClient","getBoundingClientRect","boundingClientY","y","scrollFromTop","moveAmount","style","transform","observe"],"mappings":"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","file":"script.76d4bba4.js","sourceRoot":"../src","sourcesContent":["const sections = document.querySelectorAll(\".section\");\nconst sectBtns = document.querySelectorAll(\".controls\");\nconst sectBtn = document.querySelectorAll(\".control\");\nconst allSections = document.querySelector(\".main-content\");\nconst ctaBtn = document.querySelector(\".cta-btn\");\nconst contactSec = document.getElementById(\"contact\");\nconst contactBtn = document.querySelector(\".control-5\");\n\n// CHANGE PAGE TRANSITION -- CHANGE PAGE TRANSITION -- CHANGE PAGE TRANSITION\nfunction PageTransitions() {\n  //button click active class\n\n  for (let i = 0; i < sectBtn.length; i++) {\n    sectBtn[i].addEventListener(\"click\", function () {\n      let currentBtn = document.querySelectorAll(\".active-btn\");\n      currentBtn[0].className = currentBtn[0].className.replace(\n        \"active-btn\",\n        \"\"\n      );\n      this.className += \" active-btn\";\n    });\n  }\n\n  // Sections active class\n  allSections.addEventListener(\"click\", (e) => {\n    const id = e.target.dataset.id;\n    if (id) {\n      // remove selected from the other btns\n      sectBtn.forEach((btn) => {\n        btn.classList.remove(\"active\");\n      });\n      // e.target.classList.add(\"active\"); <--- might be useless\n      // hide other sections\n      sections.forEach((section) => {\n        section.classList.remove(\"active\");\n      });\n\n      const element = document.getElementById(id);\n      element.classList.add(\"active\");\n    }\n  });\n\n  // Makes clicking the CTA button switch to contact screen\n  ctaBtn.addEventListener(\"click\", (e) => {\n    sections.forEach((section) => {\n      section.classList.remove(\"active\");\n    });\n    contactSec.classList.add(\"active\");\n\n    let currentBtn = document.querySelectorAll(\".active-btn\");\n    currentBtn[0].className = currentBtn[0].className.replace(\"active-btn\", \"\");\n    contactBtn.classList += \" active-btn\";\n  });\n\n  // // Toggle theme\n  // const themeBtn = document.querySelector(\".theme-btn\");\n  // themeBtn.addEventListener(\"click\", () => {\n  //   let element = document.body;\n  //   element.classList.toggle(\"light-mode\");\n  // });\n}\nPageTransitions();\n\n  // TYPEWRITER FEATURE --  TYPEWRITER FEATURE -- TYPEWRITER FEATURE\n// Start of the typing animation within the header\nconst TypeWriter = function (txtElement, words, wait = 3000) {\n  this.txtElement = txtElement; //the span for the element holding the word\n  this.words = words; // The variable for the array of words\n  this.txt = \"\"; // variable for the animation of the typing\n  this.wordIndex = 0; //starting with the first word at the index of 0\n  this.wait = parseInt(wait, 10); //check it's an integer for the wait time\n  this.type(); //method of type that's associated with the typewriter\n  this.isDeleting = false; //represents the state if it's deleting or not\n};\n\n// a way we add a method to the typeWriter is by using prototypes\nTypeWriter.prototype.type = function () {\n  //current index of the word (counting down from 1)\n  // use the modulus operator \"%\" to get the remainder of the division\n  const currentWord = this.wordIndex % this.words.length;\n\n  //Get the full text of of the word\n  const fullTxt = this.words[currentWord];\n\n  //Check if the words are deleting\n  // The substring() method extracts characters from start to end\n  if (this.isDeleting) {\n    //removing letters\n    this.txt = fullTxt.substring(0, this.txt.length - 1);\n  } else {\n    //add letters\n    this.txt = fullTxt.substring(0, this.txt.length + 1);\n  }\n\n  //insert txt into elements\n  //use template leteral `${}` to interpolate variables\n  this.txtElement.innerHTML = `<span class=\"txt\">${this.txt}</span>`;\n\n  //type speed\n  // type speed changes (stop, faster deleting, etc), so use let\n  let typeSpeed = 200;\n\n  // if isDeleting is true, cut the speed by half\n  if (this.isDeleting) {\n    typeSpeed /= 2;\n  }\n\n  // check to see if the words are complete\n  if (!this.isDeleting && this.txt === fullTxt) {\n    // this will make the animation pause at the end\n    typeSpeed = this.wait;\n\n    // set isDeleting back to true\n    this.isDeleting = true;\n\n    // this is the \"if\" once it's completes typing out the word\n  } else if (this.isDeleting && this.txt === \"\") {\n    this.isDeleting = false;\n\n    // move to the next word indrumenting by 1\n    this.wordIndex++;\n\n    // pause before starting the next word\n    typeSpeed = 300;\n  }\n\n  // timer for each letter that is added or deleted\n  setTimeout(() => this.type(), typeSpeed); // 2 words per second\n};\n\n// initializing on DOM load\ndocument.addEventListener(\"DOMContentLoaded\", initializeText);\nfunction initializeText() {\n  // getting the h2 element on the DOM\n  const txtElement = document.querySelector(\".txt-type\");\n\n  // getting the text attributes using \"data-\"\n  // need to use JSON.parse() method to turn string into an array\n  const words = JSON.parse(txtElement.getAttribute(\"data-words\"));\n\n  // getting the wait attribute using \"data-\"\n  const wait = txtElement.getAttribute(\"data-wait\");\n\n  //initialize the typewriter function\n  new TypeWriter(txtElement, words, wait);\n}\n\n\n// parralax effect on main page titles\n// will be adding a slight parallax effect on Intersection Observer > getBoundingClientRect. \n\n\n\n// Our services section phone parallax effect\nconst servicesPageObserverOption = {\n  rootMargin: \"0px\",\n  threshold: 0\n};\nconst servicesPagePhone = document.querySelector('.servicesPage-phone');\nfunction moveServicePagePhone() {\n  const servicesPagePhoneObserver = new IntersectionObserver(function(entries, servicesPagePhone) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const windowHeight = window.innerHeight;\n        let boundingClient = entry.target.getBoundingClientRect();\n        let boundingClientY = boundingClient.y;\n        let scrollFromTop = windowHeight - boundingClientY;\n        let moveAmount = (scrollFromTop / 20) - 50;\n        entry.target.style.transform = `translateY(${moveAmount}px)`;\n      };\n    })\n  }, servicesPageObserverOption);\n  servicesPagePhoneObserver.observe(servicesPagePhone);\n\n}\nwindow.addEventListener('scroll', moveServicePagePhone);"]}